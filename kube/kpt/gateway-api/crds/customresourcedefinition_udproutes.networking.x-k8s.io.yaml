apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata: # kpt-merge: /udproutes.networking.x-k8s.io
  name: udproutes.networking.x-k8s.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: "null"
spec:
  group: networking.x-k8s.io
  names:
    kind: UDPRoute
    categories:
    - gateway-api
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
  - name: v1alpha1
    additionalPrinterColumns:
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: UDPRoute is a resource that specifies how a Gateway should forward UDP traffic.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Spec defines the desired state of UDPRoute.
            properties:
              gateways:
                type: object
                default:
                  allow: SameNamespace
                description: Gateways defines which Gateways can use this Route.
                properties:
                  allow:
                    type: string
                    default: SameNamespace
                    description: 'Allow indicates which Gateways will be allowed to use this route. Possible values are: * All: Gateways in any namespace can use this route. * FromList: Only Gateways specified in GatewayRefs may use this route. * SameNamespace: Only Gateways in the same namespace may use this route.'
                    enum:
                    - All
                    - FromList
                    - SameNamespace
                  gatewayRefs:
                    type: array
                    description: GatewayRefs must be specified when Allow is set to "FromList". In that case, only Gateways referenced in this list will be allowed to use this route. This field is ignored for other values of "Allow".
                    items:
                      type: object
                      description: GatewayReference identifies a Gateway in a specified namespace.
                      properties:
                        name:
                          type: string
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                        namespace:
                          type: string
                          description: Namespace is the namespace of the referent.
                          maxLength: 253
                          minLength: 1
                      required:
                      - name
                      - namespace
              rules:
                type: array
                description: Rules are a list of UDP matchers and actions.
                items:
                  type: object
                  description: UDPRouteRule is the configuration for a given rule.
                  properties:
                    forwardTo:
                      type: array
                      description: ForwardTo defines the backend(s) where matching requests should be sent.
                      items:
                        type: object
                        description: RouteForwardTo defines how a Route should forward a request.
                        properties:
                          serviceName:
                            type: string
                            description: "ServiceName refers to the name of the Service to forward matched requests to. When specified, this takes the place of BackendRef. If both BackendRef and ServiceName are specified, ServiceName will be given precedence. \n If the referent cannot be found, the rule is not included in the route. The controller should raise the \"ResolvedRefs\" condition on the Gateway with the \"DegradedRoutes\" reason. The gateway status for this route should be updated with a condition that describes the error more specifically. \n The protocol to use is defined using AppProtocol field (introduced in Kubernetes 1.18) in the Service resource. In the absence of the AppProtocol field a `networking.x-k8s.io/app-protocol` annotation on the BackendPolicy resource may be used to define the protocol. If the AppProtocol field is available, this annotation should not be used. The AppProtocol field, when populated, takes precedence over the annotation in the BackendPolicy resource. For custom backends, it is encouraged to add a semantically-equivalent field in the Custom Resource Definition. \n Support: Core"
                            maxLength: 253
                          port:
                            type: integer
                            description: "Port specifies the destination port number to use for the backend referenced by the ServiceName or BackendRef field. If unspecified, the destination port in the request is used when forwarding to a backendRef or serviceName. \n Support: Core"
                            format: int32
                            maximum: 65535
                            minimum: 1
                          backendRef:
                            type: object
                            description: "BackendRef is a reference to a backend to forward matched requests to. If both BackendRef and ServiceName are specified, ServiceName will be given precedence. \n If the referent cannot be found, the rule is not included in the route. The controller should raise the \"ResolvedRefs\" condition on the Gateway with the \"DegradedRoutes\" reason. The gateway status for this route should be updated with a condition that describes the error more specifically. \n Support: Custom"
                            properties:
                              name:
                                type: string
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                              kind:
                                type: string
                                description: Kind is kind of the referent.
                                maxLength: 253
                                minLength: 1
                              group:
                                type: string
                                description: Group is the group of the referent.
                                maxLength: 253
                                minLength: 1
                            required:
                            - group
                            - kind
                            - name
                          weight:
                            type: integer
                            default: 1
                            description: "Weight specifies the proportion of HTTP requests forwarded to the backend referenced by the ServiceName or BackendRef field. This is computed as weight/(sum of all weights in this ForwardTo list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support: Extended"
                            format: int32
                            maximum: 1000000
                            minimum: 0
                      maxItems: 16
                      minItems: 1
                    matches:
                      type: array
                      description: "Matches define conditions used for matching the rule against incoming UDP connections. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. If unspecified (i.e. empty), this Rule will match all requests for the associated Listener. \n Each client request MUST map to a maximum of one route rule. If a request matches multiple rules, matching precedence MUST be determined in order of the following criteria, continuing on ties: \n * The most specific match specified by ExtensionRef. Each implementation   that supports ExtensionRef may have different ways of determining the   specificity of the referenced extension. \n If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: \n * The oldest Route based on creation timestamp. For example, a Route with   a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over   a Route with a creation timestamp of \"2020-09-08 01:02:04\". * The Route appearing first in alphabetical order by   \"<namespace>/<name>\". For example, foo/bar is given precedence over   foo/baz. \n If ties still exist within the Route that has been given precedence, matching precedence MUST be granted to the first matching rule meeting the above criteria."
                      items:
                        type: object
                        description: UDPRouteMatch defines the predicate used to match packets to a given action.
                        properties:
                          extensionRef:
                            type: object
                            description: "ExtensionRef is an optional, implementation-specific extension to the \"match\" behavior.  For example, resource \"myudproutematcher\" in group \"networking.acme.io\". If the referent cannot be found, the rule is not included in the route. The controller should raise the \"ResolvedRefs\" condition on the Gateway with the \"DegradedRoutes\" reason. The gateway status for this route should be updated with a condition that describes the error more specifically. \n Support: Custom"
                            properties:
                              name:
                                type: string
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                              kind:
                                type: string
                                description: Kind is kind of the referent.
                                maxLength: 253
                                minLength: 1
                              group:
                                type: string
                                description: Group is the group of the referent.
                                maxLength: 253
                                minLength: 1
                            required:
                            - group
                            - kind
                            - name
                      maxItems: 8
                  required:
                  - forwardTo
                maxItems: 16
                minItems: 1
            required:
            - rules
          status:
            type: object
            description: Status defines the current state of UDPRoute.
            properties:
              gateways:
                type: array
                description: "Gateways is a list of Gateways that are associated with the route, and the status of the route with respect to each Gateway. When a Gateway selects this route, the controller that manages the Gateway must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route is modified. \n A maximum of 100 Gateways will be represented in this list. If this list is full, there may be additional Gateways using this Route that are not included in the list. An empty list means the route has not been admitted by any Gateway."
                items:
                  type: object
                  description: RouteGatewayStatus describes the status of a route with respect to an associated Gateway.
                  properties:
                    conditions:
                      type: array
                      description: Conditions describes the status of the route with respect to the Gateway. The "Admitted" condition must always be specified by controllers to indicate whether the route has been admitted or rejected by the Gateway, and why. Note that the route's availability is also subject to the Gateway's own status conditions and listener status.
                      items:
                        type: object
                        description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                        properties:
                          type:
                            type: string
                            description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          status:
                            type: string
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                          lastTransitionTime:
                            type: string
                            description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                          message:
                            type: string
                            description: message is a human readable message indicating details about the transition. This may be an empty string.
                            maxLength: 32768
                          observedGeneration:
                            type: integer
                            description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                          reason:
                            type: string
                            description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                      maxItems: 8
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    gatewayRef:
                      type: object
                      description: GatewayRef is a reference to a Gateway object that is associated with the route.
                      properties:
                        name:
                          type: string
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                        namespace:
                          type: string
                          description: Namespace is the namespace of the referent.
                          maxLength: 253
                          minLength: 1
                        controller:
                          type: string
                          description: "Controller is a domain/path string that indicates the controller implementing the Gateway. This corresponds with the controller field on GatewayClass. \n Example: \"acme.io/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names)."
                          maxLength: 253
                      required:
                      - name
                      - namespace
                  required:
                  - gatewayRef
                maxItems: 100
            required:
            - gateways
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
