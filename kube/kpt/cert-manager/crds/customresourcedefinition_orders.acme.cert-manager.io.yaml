# Source: cert-manager/templates/templates.out
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: orders.acme.cert-manager.io
  labels:
    app: 'cert-manager'
    app.kubernetes.io/instance: 'cert-manager'
    app.kubernetes.io/name: 'cert-manager'
    # Generated labels
    app.kubernetes.io/version: "v1.5.0"
  annotations:
    cert-manager.io/inject-ca-from-secret: 'cert-manager/cert-manager-webhook-ca'
spec:
  conversion:
    # a Webhook strategy instruct API server to call an external webhook for any conversion between custom resources.
    strategy: Webhook
    # webhookClientConfig is required when strategy is `Webhook` and it configures the webhook endpoint to be called by API server.
    webhook:
      clientConfig:
        #
        service:
          name: 'cert-manager-webhook'
          namespace: "cert-manager"
          path: /convert
          #
      # We don't actually support `v1beta1` but is listed here as it is a
      # required value for [Kubernetes v1.16](kubernetes/kubernetes#82023). The
      # API server reads the supported versions in order, so _should always_
      # attempt a `v1` request which is understood by the cert-manager webhook.
      # Any `v1beta1` request will return an error and fail closed for that
      # resource (the whole object request is rejected).
      # When we no longer support v1.16 we can remove `v1beta1` from this list.
      conversionReviewVersions: ["v1", "v1beta1"]
  group: acme.cert-manager.io
  names:
    kind: Order
    categories:
    - cert-manager
    - cert-manager-acme
    listKind: OrderList
    plural: orders
    singular: order
  scope: Namespaced
  versions:
  - name: v1alpha2
    additionalPrinterColumns:
    - name: State
      type: string
      jsonPath: .status.state
    - name: Issuer
      type: string
      priority: 1
      jsonPath: .spec.issuerRef.name
    - name: Reason
      type: string
      priority: 1
      jsonPath: .status.reason
    - name: Age
      type: date
      description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Order is a type to represent an Order with an ACME server
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            properties:
              commonName:
                type: string
                description: CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
              csr:
                type: string
                description: Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
                format: byte
              dnsNames:
                type: array
                description: DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              duration:
                type: string
                description: Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
              ipAddresses:
                type: array
                description: IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              issuerRef:
                type: object
                description: IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
                properties:
                  name:
                    type: string
                    description: Name of the resource being referred to.
                  kind:
                    type: string
                    description: Kind of the resource being referred to.
                  group:
                    type: string
                    description: Group of the resource being referred to.
                required:
                - name
            required:
            - csr
            - issuerRef
          status:
            type: object
            properties:
              authorizations:
                type: array
                description: Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
                items:
                  type: object
                  description: ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
                  properties:
                    challenges:
                      type: array
                      description: Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
                      items:
                        type: object
                        description: Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
                        properties:
                          type:
                            type: string
                            description: Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
                          token:
                            type: string
                            description: Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
                          url:
                            type: string
                            description: URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
                        required:
                        - token
                        - type
                        - url
                    identifier:
                      type: string
                      description: Identifier is the DNS name to be validated as part of this authorization
                    initialState:
                      type: string
                      description: InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
                      enum:
                      - valid
                      - ready
                      - pending
                      - processing
                      - invalid
                      - expired
                      - errored
                    url:
                      type: string
                      description: URL is the URL of the Authorization that must be completed
                    wildcard:
                      type: boolean
                      description: Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
                  required:
                  - url
              certificate:
                type: string
                description: Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
                format: byte
              failureTime:
                type: string
                description: FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
                format: date-time
              finalizeURL:
                type: string
                description: FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
              reason:
                type: string
                description: Reason optionally provides more information about a why the order is in the current state.
              state:
                type: string
                description: State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
              url:
                type: string
                description: URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
        required:
        - metadata
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha3
    additionalPrinterColumns:
    - name: State
      type: string
      jsonPath: .status.state
    - name: Issuer
      type: string
      priority: 1
      jsonPath: .spec.issuerRef.name
    - name: Reason
      type: string
      priority: 1
      jsonPath: .status.reason
    - name: Age
      type: date
      description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Order is a type to represent an Order with an ACME server
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            properties:
              commonName:
                type: string
                description: CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
              csr:
                type: string
                description: Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
                format: byte
              dnsNames:
                type: array
                description: DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              duration:
                type: string
                description: Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
              ipAddresses:
                type: array
                description: IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              issuerRef:
                type: object
                description: IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
                properties:
                  name:
                    type: string
                    description: Name of the resource being referred to.
                  kind:
                    type: string
                    description: Kind of the resource being referred to.
                  group:
                    type: string
                    description: Group of the resource being referred to.
                required:
                - name
            required:
            - csr
            - issuerRef
          status:
            type: object
            properties:
              authorizations:
                type: array
                description: Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
                items:
                  type: object
                  description: ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
                  properties:
                    challenges:
                      type: array
                      description: Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
                      items:
                        type: object
                        description: Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
                        properties:
                          type:
                            type: string
                            description: Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
                          token:
                            type: string
                            description: Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
                          url:
                            type: string
                            description: URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
                        required:
                        - token
                        - type
                        - url
                    identifier:
                      type: string
                      description: Identifier is the DNS name to be validated as part of this authorization
                    initialState:
                      type: string
                      description: InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
                      enum:
                      - valid
                      - ready
                      - pending
                      - processing
                      - invalid
                      - expired
                      - errored
                    url:
                      type: string
                      description: URL is the URL of the Authorization that must be completed
                    wildcard:
                      type: boolean
                      description: Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
                  required:
                  - url
              certificate:
                type: string
                description: Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
                format: byte
              failureTime:
                type: string
                description: FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
                format: date-time
              finalizeURL:
                type: string
                description: FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
              reason:
                type: string
                description: Reason optionally provides more information about a why the order is in the current state.
              state:
                type: string
                description: State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
              url:
                type: string
                description: URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
        required:
        - metadata
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    additionalPrinterColumns:
    - name: State
      type: string
      jsonPath: .status.state
    - name: Issuer
      type: string
      priority: 1
      jsonPath: .spec.issuerRef.name
    - name: Reason
      type: string
      priority: 1
      jsonPath: .status.reason
    - name: Age
      type: date
      description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Order is a type to represent an Order with an ACME server
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            properties:
              commonName:
                type: string
                description: CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
              dnsNames:
                type: array
                description: DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              duration:
                type: string
                description: Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
              ipAddresses:
                type: array
                description: IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              issuerRef:
                type: object
                description: IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
                properties:
                  name:
                    type: string
                    description: Name of the resource being referred to.
                  kind:
                    type: string
                    description: Kind of the resource being referred to.
                  group:
                    type: string
                    description: Group of the resource being referred to.
                required:
                - name
              request:
                type: string
                description: Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
                format: byte
            required:
            - issuerRef
            - request
          status:
            type: object
            properties:
              authorizations:
                type: array
                description: Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
                items:
                  type: object
                  description: ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
                  properties:
                    challenges:
                      type: array
                      description: Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
                      items:
                        type: object
                        description: Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
                        properties:
                          type:
                            type: string
                            description: Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
                          token:
                            type: string
                            description: Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
                          url:
                            type: string
                            description: URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
                        required:
                        - token
                        - type
                        - url
                    identifier:
                      type: string
                      description: Identifier is the DNS name to be validated as part of this authorization
                    initialState:
                      type: string
                      description: InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
                      enum:
                      - valid
                      - ready
                      - pending
                      - processing
                      - invalid
                      - expired
                      - errored
                    url:
                      type: string
                      description: URL is the URL of the Authorization that must be completed
                    wildcard:
                      type: boolean
                      description: Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
                  required:
                  - url
              certificate:
                type: string
                description: Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
                format: byte
              failureTime:
                type: string
                description: FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
                format: date-time
              finalizeURL:
                type: string
                description: FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
              reason:
                type: string
                description: Reason optionally provides more information about a why the order is in the current state.
              state:
                type: string
                description: State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
              url:
                type: string
                description: URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
        required:
        - metadata
        - spec
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1
    additionalPrinterColumns:
    - name: State
      type: string
      jsonPath: .status.state
    - name: Issuer
      type: string
      priority: 1
      jsonPath: .spec.issuerRef.name
    - name: Reason
      type: string
      priority: 1
      jsonPath: .status.reason
    - name: Age
      type: date
      description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
    schema:
      openAPIV3Schema:
        type: object
        description: Order is a type to represent an Order with an ACME server
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            properties:
              commonName:
                type: string
                description: CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
              dnsNames:
                type: array
                description: DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              duration:
                type: string
                description: Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.
              ipAddresses:
                type: array
                description: IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
                items:
                  type: string
              issuerRef:
                type: object
                description: IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
                properties:
                  name:
                    type: string
                    description: Name of the resource being referred to.
                  kind:
                    type: string
                    description: Kind of the resource being referred to.
                  group:
                    type: string
                    description: Group of the resource being referred to.
                required:
                - name
              request:
                type: string
                description: Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.
                format: byte
            required:
            - issuerRef
            - request
          status:
            type: object
            properties:
              authorizations:
                type: array
                description: Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.
                items:
                  type: object
                  description: ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.
                  properties:
                    challenges:
                      type: array
                      description: Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.
                      items:
                        type: object
                        description: Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.
                        properties:
                          type:
                            type: string
                            description: Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.
                          token:
                            type: string
                            description: Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.
                          url:
                            type: string
                            description: URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.
                        required:
                        - token
                        - type
                        - url
                    identifier:
                      type: string
                      description: Identifier is the DNS name to be validated as part of this authorization
                    initialState:
                      type: string
                      description: InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.
                      enum:
                      - valid
                      - ready
                      - pending
                      - processing
                      - invalid
                      - expired
                      - errored
                    url:
                      type: string
                      description: URL is the URL of the Authorization that must be completed
                    wildcard:
                      type: boolean
                      description: Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.
                  required:
                  - url
              certificate:
                type: string
                description: Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.
                format: byte
              failureTime:
                type: string
                description: FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.
                format: date-time
              finalizeURL:
                type: string
                description: FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.
              reason:
                type: string
                description: Reason optionally provides more information about a why the order is in the current state.
              state:
                type: string
                description: State contains the current state of this Order resource. States 'success' and 'expired' are 'final'
                enum:
                - valid
                - ready
                - pending
                - processing
                - invalid
                - expired
                - errored
              url:
                type: string
                description: URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.
        required:
        - metadata
        - spec
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
