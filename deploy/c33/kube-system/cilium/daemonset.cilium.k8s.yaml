# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      labels:
        k8s-app: cilium
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 1
      serviceAccountName: "cilium"
      serviceAccount: "cilium"
      hostNetwork: true
      priorityClassName: system-node-critical
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.10.6@sha256:cf52b14bf9bc62e4eb1967661a51e5f5482cbb05b784c0a0e38ee16d66f85773"
        command:
        - sh
        - -c
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - 'cp /usr/bin/cilium-mount /hostbin/cilium-mount && nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT; rm /hostbin/cilium-mount'
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.10.6@sha256:cf52b14bf9bc62e4eb1967661a51e5f5482cbb05b784c0a0e38ee16d66f85773"
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: bpf-maps
          # Required to mount cgroup filesystem from the host to cilium agent pod

          mountPath: /sys/fs/bpf
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.10.6@sha256:cf52b14bf9bc62e4eb1967661a51e5f5482cbb05b784c0a0e38ee16d66f85773"
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          readOnly: true
          mountPath: /var/lib/cilium/clustermesh
        - name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules

          mountPath: /tmp/cilium/config-map
        - name: lib-modules
          readOnly: true
          mountPath: /lib/modules
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          readOnly: true
          mountPath: /var/lib/cilium/tls/hubble
        livenessProbe:
          failureThreshold: 10
          httpGet:
            port: 9876
            host: '127.0.0.1'
            httpHeaders:
            - name: "brief"
              value: "true"
            path: /healthz
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            port: 9876
            host: '127.0.0.1'
            httpHeaders:
            - name: "brief"
              value: "true"
            path: /healthz
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            port: 9876
            host: '127.0.0.1'
            httpHeaders:
            - name: "brief"
              value: "true"
            path: /healthz
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
      volumes:
      # To keep state between restarts / upgrades
      - name: cilium-run
        # To keep state between restarts / upgrades for bpf maps

        hostPath:
          type: DirectoryOrCreate
          path: /var/run/cilium
      - name: bpf-maps
        hostPath:
          type: DirectoryOrCreate
          path: /sys/fs/bpf
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          type: Directory
          path: /proc
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          type: DirectoryOrCreate
          path: /run/cilium/cgroupv2
      # To install cilium cni plugin in the host
      - name: cni-path
        # To install cilium cni configuration in the host

        hostPath:
          type: DirectoryOrCreate
          path: /opt/cni/bin
      - name: etc-cni-netd
        # To be able to load kernel modules

        hostPath:
          type: DirectoryOrCreate
          path: /etc/cni/net.d
      - name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)

        hostPath:
          path: /lib/modules
      - name: xtables-lock
        # To read the clustermesh configuration

        hostPath:
          type: FileOrCreate
          path: /run/xtables.lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
          # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              optional: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      tolerations:
      - operator: Exists
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
