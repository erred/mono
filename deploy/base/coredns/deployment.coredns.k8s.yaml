apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
spec:
  replicas: 1
  template:
    spec:
      dnsPolicy: Default
      serviceAccountName: coredns
      priorityClassName: system-cluster-critical
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: coredns
          image: coredns/coredns:1.7.0
          args: ["-conf", "/etc/coredns/Corefile"]
          ports:
            - name: dns
              protocol: UDP
              containerPort: 53
            - name: dns-tcp
              protocol: TCP
              containerPort: 53
            - name: metrics
              protocol: TCP
              containerPort: 9153
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          volumeMounts:
            - name: config-volume
              readOnly: true
              mountPath: /etc/coredns
          livenessProbe:
            failureThreshold: 5
            httpGet:
              port: 8080
              path: /health
              scheme: HTTP
            initialDelaySeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              port: 8181
              path: /ready
              scheme: HTTP
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - all
            readOnlyRootFilesystem: true
      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
              - key: Corefile
                path: Corefile
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
