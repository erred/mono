# syntax=docker/dockerfile:1

FROM golang:alpine AS build
ARG APP
ENV APP=${APP}
ARG CGO_ENABLED=0
ARG GOPROXY=https://proxy.golang.org,direct
ARG GOMODCACHE=/go/pkg/mod
ARG GOCACHE=/root/.cache/go-build
ARG GTM=GTM-TLVN7D6
WORKDIR /workspace
COPY . .
RUN --mount=type=cache,id=gomod,target=${GOMODCACHE} \
    --mount=type=cache,id=gobuild,target=${GOCACHE} \
    go run ./go/cmd/webrender -src blog -dst ./go/internal/w16/static/root -gtm ${GTM}
RUN --mount=type=cache,id=gomod,target=${GOMODCACHE} \
    --mount=type=cache,id=gobuild,target=${GOCACHE} \
    go build -trimpath -ldflags='-s -w' -o /bin/ ./go/cmd/${APP}

FROM gcr.io/distroless/static AS app
ARG APP
ENV APP=${APP}
COPY --from=build /bin/${APP} /bin/app
ENTRYPOINT ["/bin/app"]
